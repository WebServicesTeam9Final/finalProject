{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "CSE-341 Team 9 Final Project REST API",
    "description": "A temple work REST API developed by Ashlee Butterfield, Madison Lutz, Jonas Nunn, Mike Lewis"
  },
  "host": "finalwebservices.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Main"
        ],
        "summary": "Return API name and version number.",
        "description": "This endpoint simply returns an object containing the name of the API, version number, and author.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the version information for the API.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "finalproject"
                },
                "prettyName": {
                  "type": "string",
                  "example": "CSE-341 Team 9 Final Project REST API"
                },
                "version": {
                  "type": "string",
                  "example": "1.0.0"
                },
                "author": {
                  "type": "string",
                  "example": "Ashlee Butterfield, Madison Lutz, Jonas Nunn, Mike Lewis"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api-docs/": {
      "get": {
        "tags": [
          "API Documentation"
        ],
        "summary": "Provide documentation for this API.",
        "description": "Executes the main Swagger documentation user interface handler.",
        "responses": {
          "200": {
            "description": "A functioning web page is returned allowing the user to navigate the documentation. No JSON data is returned on this route."
          }
        }
      }
    },
    "/completed/": {
      "get": {
        "tags": [
          "Completed"
        ],
        "summary": "Return the entire list of completed records.",
        "description": "Returns all completed records in the collection. No filtering is applied.",
        "responses": {
          "200": {
            "description": "All completed records are successfully fetched and returned in an array.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "0123456789abcdef01234567"
                  },
                  "fname": {
                    "type": "string",
                    "example": "Joseph"
                  },
                  "lname": {
                    "type": "string",
                    "example": "Smith"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male"
                  },
                  "birthday": {
                    "type": "string",
                    "example": "23-Dec-1805"
                  },
                  "baptism": {
                    "type": "string",
                    "example": "15-May-1829"
                  },
                  "confirmation": {
                    "type": "string",
                    "example": "15-May-1829"
                  },
                  "initiatory": {
                    "type": "string",
                    "example": "5-May-1842"
                  },
                  "endowment": {
                    "type": "string",
                    "example": "5-May-1842"
                  },
                  "sealing": {
                    "type": "string",
                    "example": "28-May-1843"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "418": {
            "description": "I'm a teapot"
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fname": {
                  "example": "any"
                },
                "lname": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                },
                "baptism": {
                  "example": "any"
                },
                "confirmation": {
                  "example": "any"
                },
                "initiatory": {
                  "example": "any"
                },
                "endowment": {
                  "example": "any"
                },
                "sealing": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/completed/{id}": {
      "get": {
        "tags": [
          "Completed"
        ],
        "summary": "Get a single completed record.",
        "description": "Returns the completed record identified by `id` for a single family member record that has had all temple work completed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a family member record that has had all temple work completed.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "A single completed record identified by `id` is successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "0123456789abcdef01234567"
                },
                "fname": {
                  "type": "string",
                  "example": "Joseph"
                },
                "lname": {
                  "type": "string",
                  "example": "Smith"
                },
                "gender": {
                  "type": "string",
                  "example": "Male"
                },
                "birthday": {
                  "type": "string",
                  "example": "23-Dec-1805"
                },
                "baptism": {
                  "type": "string",
                  "example": "15-May-1829"
                },
                "confirmation": {
                  "type": "string",
                  "example": "15-May-1829"
                },
                "initiatory": {
                  "type": "string",
                  "example": "5-May-1842"
                },
                "endowment": {
                  "type": "string",
                  "example": "5-May-1842"
                },
                "sealing": {
                  "type": "string",
                  "example": "28-May-1843"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "404": {
            "description": "Not found."
          },
          "418": {
            "description": "I'm a teapot"
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fname": {
                  "example": "any"
                },
                "lname": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                },
                "baptism": {
                  "example": "any"
                },
                "confirmation": {
                  "example": "any"
                },
                "initiatory": {
                  "example": "any"
                },
                "endowment": {
                  "example": "any"
                },
                "sealing": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Completed"
        ],
        "summary": "Delete a single completed record.",
        "description": "Deletes a completed record identified by `id`. If `id` does not exist, no action is taken and no error occurs. Check the `deletedCount` attribute in the response to determine if a completed record was actually deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a completed record.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "The completed record identified by `id` is deleted from the collection if it exists. The response is an object containing an aknowledgement and the number of matching completed record(s) deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "deletedCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    },
    "/family-members/": {
      "get": {
        "tags": [
          "Family Members"
        ],
        "summary": "Return the entire list of family member records.",
        "description": "Returns all family member records in the collection. No filtering is applied.",
        "responses": {
          "200": {
            "description": "All family member records are successfully fetched and returned in an array.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "0123456789abcdef01234567"
                  },
                  "fname": {
                    "type": "string",
                    "example": "Joseph"
                  },
                  "lname": {
                    "type": "string",
                    "example": "Smith"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male"
                  },
                  "birthday": {
                    "type": "string",
                    "example": "23-Dec-1805"
                  },
                  "baptism": {
                    "type": "string",
                    "example": "15-May-1829"
                  },
                  "confirmation": {
                    "type": "string",
                    "example": "15-May-1829"
                  },
                  "initiatory": {
                    "type": "string",
                    "example": ""
                  },
                  "endowment": {
                    "type": "string",
                    "example": ""
                  },
                  "sealing": {
                    "type": "string",
                    "example": ""
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "418": {
            "description": "I'm a teapot"
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fname": {
                  "example": "any"
                },
                "lname": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                },
                "baptism": {
                  "example": "any"
                },
                "confirmation": {
                  "example": "any"
                },
                "initiatory": {
                  "example": "any"
                },
                "endowment": {
                  "example": "any"
                },
                "sealing": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/family-members/{id}": {
      "get": {
        "tags": [
          "Family Members"
        ],
        "summary": "Get a single family member record.",
        "description": "Returns the family member record identified by `id` for a single family member record that needs temple work completed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a family member record that needs temple work completed.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "A single family member record identified by `id` is successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "0123456789abcdef01234567"
                },
                "fname": {
                  "type": "string",
                  "example": "Joseph"
                },
                "lname": {
                  "type": "string",
                  "example": "Smith"
                },
                "gender": {
                  "type": "string",
                  "example": "Male"
                },
                "birthday": {
                  "type": "string",
                  "example": "23-Dec-1805"
                },
                "baptism": {
                  "type": "string",
                  "example": "15-May-1829"
                },
                "confirmation": {
                  "type": "string",
                  "example": "15-May-1829"
                },
                "initiatory": {
                  "type": "string",
                  "example": ""
                },
                "endowment": {
                  "type": "string",
                  "example": ""
                },
                "sealing": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "404": {
            "description": "Not found."
          },
          "418": {
            "description": "I'm a teapot"
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fname": {
                  "example": "any"
                },
                "lname": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                },
                "baptism": {
                  "example": "any"
                },
                "confirmation": {
                  "example": "any"
                },
                "initiatory": {
                  "example": "any"
                },
                "endowment": {
                  "example": "any"
                },
                "sealing": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Completed"
        ],
        "summary": "Delete a single completed record.",
        "description": "Deletes a completed record identified by `id`. If `id` does not exist, no action is taken and no error occurs. Check the `deletedCount` attribute in the response to determine if a completed record was actually deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a completed record.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "The completed record identified by `id` is deleted from the collection if it exists. The response is an object containing an aknowledgement and the number of matching completed record(s) deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "deletedCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    },
    "/temples/": {
      "get": {
        "tags": [
          "Temples"
        ],
        "summary": "Return the entire list of temple records.",
        "description": "Returns all temple records in the collection. No filtering is applied.",
        "responses": {
          "200": {
            "description": "All temple records are successfully fetched and returned in an array.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "a1b2c3d4e5f6a1b2c3d4e5f6"
                  },
                  "templeId": {
                    "type": "string",
                    "example": "1"
                  },
                  "templeName": {
                    "type": "string",
                    "example": "Mount Timpanogos Utah Temple"
                  },
                  "templeAddress": {
                    "type": "string",
                    "example": "742 N 900 E, American Fork, UT 84003, USA"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "418": {
            "description": "I'm a teapot"
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "templeName": {
                  "example": "any"
                },
                "templeAddress": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/temples/{id}": {
      "get": {
        "tags": [
          "Temples"
        ],
        "summary": "Get a single temple record.",
        "description": "Returns the temple record identified by `id` for a single temple record that needs temple work completed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a temple record that needs temple work completed.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "A single temple record identified by `id` is successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "a1b2c3d4e5f6a1b2c3d4e5f6"
                },
                "templeId": {
                  "type": "string",
                  "example": "1"
                },
                "templeName": {
                  "type": "string",
                  "example": "Mount Timpanogos Utah Temple"
                },
                "templeAddress": {
                  "type": "string",
                  "example": "742 N 900 E, American Fork, UT 84003, USA"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "404": {
            "description": "Not found."
          },
          "418": {
            "description": "I'm a teapot"
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "templeName": {
                  "example": "any"
                },
                "templeAddress": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Temples"
        ],
        "summary": "Delete a single temple record.",
        "description": "Deletes a temple record identified by `id`. If `id` does not exist, no action is taken and no error occurs. Check the `deletedCount` attribute in the response to determine if a temple record was actually deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a temple record.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "The temple record identified by `id` is deleted from the collection if it exists. The response is an object containing an aknowledgement and the number of matching temple record(s) deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "deletedCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a single user record.",
        "description": "Returns the user record identified by `id` for a single user record that needs user work completed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a user record that needs user work completed.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user record identified by `id` is successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "a1b2c3d4e5f6a1b2c3d4e5f6"
                },
                "userName": {
                  "type": "string",
                  "example": "Joseph Smith"
                },
                "userPassword": {
                  "type": "string",
                  "example": "StickPuller1830"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "404": {
            "description": "Not found."
          },
          "418": {
            "description": "I'm a teapot"
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "example": "any"
                },
                "userPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a single user record.",
        "description": "Deletes a user record identified by `id`. If `id` does not exist, no action is taken and no error occurs. Check the `deletedCount` attribute in the response to determine if a user record was actually deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A valid and unique 24-digit hexadecimal string that identifies a user record.",
            "format": "hex"
          }
        ],
        "responses": {
          "200": {
            "description": "The user record identified by `id` is deleted from the collection if it exists. The response is an object containing an aknowledgement and the number of matching user record(s) deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "acknowledged": {
                  "type": "boolean",
                  "example": true
                },
                "deletedCount": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ID provided."
          },
          "500": {
            "description": "Internal server or database error."
          }
        }
      }
    },
    "/users/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "example": "any"
                },
                "userPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}